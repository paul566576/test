server:
  port: 8090

spring:
  application:
    name: "loans"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3308/loansdb
    username: root
    password: root
  sql:
    init:
      mode: always
  jpa:
    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"
  cloud:
    kubernetes:
      discovery:
        all-namespaces: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      applications: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 100
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        ignore-exceptions:
          - java.lang.NullPointerException
        retry-exceptions:
          - java.util.concurrent.TimeoutException
  ratelimiter:
    configs:
      default:
        timeout-duration: 1000
        limit-refresh-period: 5000
        limit-for-period: 1

info:
  app:
    name: "loans"
    description: "Banking Loans Application"
    version: "1.0.0"

logging:
  level:
    com:
      banking:
        loans: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

